{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      users: [],\n      newUser: {\n        name: ''\n      },\n      nameError: null\n    };\n  },\n  methods: {\n    fetchUsers() {\n      axios.get('/api/users').then(response => {\n        this.users = response.data;\n      });\n    },\n    addUser() {\n      axios.post('/api/users', this.newUser).then(() => {\n        this.fetchUsers();\n        this.newUser.name = '';\n      });\n    },\n    validateName() {\n      const name = this.newUser.name;\n      if (/^\\d+$/.test(name) && name.length <= 12) {\n        this.nameError = null;\n      } else if (/^[a-zA-Z]+$/.test(name) && name.length <= 12) {\n        this.nameError = null;\n      } else {\n        this.nameError = 'Invalid name';\n      }\n    }\n  },\n  mounted() {\n    this.fetchUsers();\n  }\n};","map":{"version":3,"names":["axios","data","users","newUser","name","nameError","methods","fetchUsers","get","then","response","addUser","post","validateName","test","length","mounted"],"sources":["/var/www/baza.ai/frontend/src/components/HelloWorld.vue"],"sourcesContent":["<template>\n  <div>\n    <form @submit.prevent=\"addUser\">\n      <input v-model=\"newUser.name\" @input=\"validateName\" placeholder=\"Name\" required />\n      <span v-if=\"nameError\">{{ nameError }}</span>\n      <button type=\"submit\" :disabled=\"!!nameError\">Add User</button>\n    </form>\n    <ul>\n      <li v-for=\"user in users\" :key=\"user.id\">\n        {{ user.name }} - {{ user.description }}\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      users: [],\n      newUser: { name: '' },\n      nameError: null,\n    };\n  },\n  methods: {\n    fetchUsers() {\n      axios.get('/api/users').then(response => {\n        this.users = response.data;\n      });\n    },\n    addUser() {\n      axios.post('/api/users', this.newUser).then(() => {\n        this.fetchUsers();\n        this.newUser.name = '';\n      });\n    },\n    validateName() {\n      const name = this.newUser.name;\n      if (/^\\d+$/.test(name) && name.length <= 12) {\n        this.nameError = null;\n      } else if (/^[a-zA-Z]+$/.test(name) && name.length <= 12) {\n        this.nameError = null;\n      } else {\n        this.nameError = 'Invalid name';\n      }\n    },\n  },\n  mounted() {\n    this.fetchUsers();\n  },\n};\n</script>\n"],"mappings":"AAgBA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE;QAAEC,IAAI,EAAE;MAAG,CAAC;MACrBC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,UAAUA,CAAA,EAAG;MACXP,KAAK,CAACQ,GAAG,CAAC,YAAY,CAAC,CAACC,IAAI,CAACC,QAAO,IAAK;QACvC,IAAI,CAACR,KAAI,GAAIQ,QAAQ,CAACT,IAAI;MAC5B,CAAC,CAAC;IACJ,CAAC;IACDU,OAAOA,CAAA,EAAG;MACRX,KAAK,CAACY,IAAI,CAAC,YAAY,EAAE,IAAI,CAACT,OAAO,CAAC,CAACM,IAAI,CAAC,MAAM;QAChD,IAAI,CAACF,UAAU,CAAC,CAAC;QACjB,IAAI,CAACJ,OAAO,CAACC,IAAG,GAAI,EAAE;MACxB,CAAC,CAAC;IACJ,CAAC;IACDS,YAAYA,CAAA,EAAG;MACb,MAAMT,IAAG,GAAI,IAAI,CAACD,OAAO,CAACC,IAAI;MAC9B,IAAI,OAAO,CAACU,IAAI,CAACV,IAAI,KAAKA,IAAI,CAACW,MAAK,IAAK,EAAE,EAAE;QAC3C,IAAI,CAACV,SAAQ,GAAI,IAAI;MACvB,OAAO,IAAI,aAAa,CAACS,IAAI,CAACV,IAAI,KAAKA,IAAI,CAACW,MAAK,IAAK,EAAE,EAAE;QACxD,IAAI,CAACV,SAAQ,GAAI,IAAI;MACvB,OAAO;QACL,IAAI,CAACA,SAAQ,GAAI,cAAc;MACjC;IACF;EACF,CAAC;EACDW,OAAOA,CAAA,EAAG;IACR,IAAI,CAACT,UAAU,CAAC,CAAC;EACnB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}